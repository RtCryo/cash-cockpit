version: '3.7'

services:
  traefik:
    container_name: traefik
    image: traefik:3.0
    command:
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--providers.docker.exposedbydefault=false"
      - "--log.level=WARN"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    labels:
      - "traefik.docker.network=cash-cockpit_proxy"

  api:
    container_name: cash-api
    build:
      context: ./api/
    expose:
      - "8080"
    depends_on:
      - traefik
      - ext_postgresql
      - broker
    networks:
      - proxy
      - app-network
    environment:
      SPRING_PROFILES_ACTIVE: prod
    healthcheck:
      test: "bash -c '>/dev/tcp/localhost/8080'"
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`cash-cockpit.local`)&&PathPrefix(`/api/`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.docker.network=cash-cockpit_proxy"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  handler:
    container_name: cash-handler
    build:
      context: ./handler/
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
    environment:
      SPRING_PROFILES_ACTIVE: prod

  messenger:
    container_name: cash-messenger
    build:
      context: ./messenger/
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
    environment:
      SPRING_PROFILES_ACTIVE: prod

  ext_postgresql:
    container_name: cash-ext_postgresql_v2
    image: postgres:16
    environment:
      POSTGRES_DB: cash_cockpit
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: verysecret
    expose:
      - "5432"
    networks:
      - app-network
    volumes:
      - postgres:/data/postgres

  ui:
    container_name: cash-ui
    build:
      context: UI
      target: builder
    restart: always
    depends_on:
      api:
        condition: service_healthy
    expose:
      - "4200"
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`cash-cockpit.local`)"
      - "traefik.http.routers.ui.entrypoints=web"
      - "traefik.docker.network=cash-cockpit_proxy"
      - "traefik.http.services.ui.loadbalancer.server.port=4200"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: cash-zookeeper
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.3
    container_name: cash-broker
    expose:
      - "9092"
    depends_on:
      - zookeeper
    networks:
      - app-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker:29092,OUTSIDE://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  broker-ui:
    image: obsidiandynamics/kafdrop
    container_name: cash-broker-ui
    expose:
      - "9000"
    networks:
      - app-network
      - proxy
    environment:
      KAFKA_BROKERCONNECT: broker:29092
    depends_on:
      - broker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.broker-ui.rule=Host(`cash-cockpit-broker.local`)"
      - "traefik.http.routers.broker-ui.entrypoints=web"
      - "traefik.docker.network=cash-cockpit_proxy"
      - "traefik.http.services.broker-ui.loadbalancer.server.port=9000"

networks:
  proxy:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  postgres:
    name: cash_cockpit_db