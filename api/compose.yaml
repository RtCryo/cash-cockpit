version: '3.7'

services:
  ext_postgresql:
    container_name: ext_postgresql_v3
    image: postgres:12
    environment:
      POSTGRES_DB: cash_cockpit
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: verysecret
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres:/data/postgres

  app:
    container_name: cash-api_v2
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - ext_postgresql
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ext_postgresql:5432/cash_cockpit
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=verysecret

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.2
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  broker-ui:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "broker:29092"
    depends_on:
      - broker


volumes:
  postgres: